/**
 * What API
 * This is what-api
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import NoteItem from '../model/NoteItem';

/**
* Developers service.
* @module api/DevelopersApi
* @version 1.0.0
*/
export default class DevelopersApi {

    /**
    * Constructs a new DevelopersApi. 
    * @alias module:api/DevelopersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addNote operation.
     * @callback module:api/DevelopersApi~addNoteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * adds a note item
     * Adds an item to the database
     * @param {Object} opts Optional parameters
     * @param {module:model/NoteItem} opts.noteItem Note item to add
     * @param {module:api/DevelopersApi~addNoteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addNote(opts, callback) {
      opts = opts || {};
      let postBody = opts['noteItem'];


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/note', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the searchNote operation.
     * @callback module:api/DevelopersApi~searchNoteCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NoteItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches note
     * By passing in the appropriate options, you can search for available note in the system 
     * @param {Object} opts Optional parameters
     * @param {String} opts.id note id
     * @param {Number} opts.skip number of records to skip for pagination
     * @param {Number} opts.limit maximum number of records to return
     * @param {module:api/DevelopersApi~searchNoteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NoteItem>}
     */
    searchNote(opts, callback) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'skip': opts['skip'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NoteItem];

      return this.apiClient.callApi(
        '/note', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNote operation.
     * @callback module:api/DevelopersApi~updateNoteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updates a note item
     * Updates an item in the database
     * @param {Object} opts Optional parameters
     * @param {module:model/NoteItem} opts.noteItem Note item to update
     * @param {module:api/DevelopersApi~updateNoteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateNote(opts, callback) {
      opts = opts || {};
      let postBody = opts['noteItem'];


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/note', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }


}

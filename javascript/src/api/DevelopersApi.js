/*
 * What API
 * This is what-api
 *
 * OpenAPI spec version: 1.2.1
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient";
import {SimpleResponse} from '../model/SimpleResponse';
import {UserPost} from '../model/UserPost';

/**
* Developers service.
* @module api/DevelopersApi
* @version 1.2.1
*/
export class DevelopersApi {

    /**
    * Constructs a new DevelopersApi. 
    * @alias module:api/DevelopersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * login user
     * signs in user
     * @param {Object} opts Optional parameters
     * @param {module:model/UserPost} opts.userCredentials User's credentials
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SimpleResponse} and HTTP response
     */
    signInUserWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['userCredentials'];


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SimpleResponse;

      return this.apiClient.callApi(
        '/user/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * login user
     * signs in user
     * @param {Object} opts Optional parameters
     * @param {module:model/UserPost} opts.userCredentials User's credentials
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SimpleResponse}
     */
    signInUser(opts) {
      return this.signInUserWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * register new user
     * signs up new user
     * @param {Object} opts Optional parameters
     * @param {module:model/UserPost} opts.userCredentials User's credentials
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SimpleResponse} and HTTP response
     */
    signUpUserWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['userCredentials'];


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SimpleResponse;

      return this.apiClient.callApi(
        '/user/register', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * register new user
     * signs up new user
     * @param {Object} opts Optional parameters
     * @param {module:model/UserPost} opts.userCredentials User's credentials
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SimpleResponse}
     */
    signUpUser(opts) {
      return this.signUpUserWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
